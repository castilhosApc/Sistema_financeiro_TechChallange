import prisma from '../lib/database';

export const userService = {
  // Buscar dados do usu√°rio
  async getUserData(userId) {
    try {
      console.log('üîç getUserData - userId:', userId);
      
      const user = await prisma.user.findUnique({
        where: { id: userId },
        include: {
          transactions: {
            orderBy: { createdAt: 'desc' },
            take: 10
          },
          contacts: {
            orderBy: { createdAt: 'desc' }
          }
        }
      });
      
      console.log('üîç getUserData - resultado:', user ? 'encontrado' : 'n√£o encontrado');
      return user;
    } catch (error) {
      console.error('‚ùå Erro em getUserData:', error);
      throw new Error('Falha ao carregar dados do usu√°rio');
    }
  },

  // Buscar usu√°rio por email
  async getUserByEmail(email) {
    try {
      console.log('üîç getUserByEmail - email:', email);
      
      const user = await prisma.user.findUnique({
        where: { email }
      });
      
      console.log('üîç getUserByEmail - resultado:', user ? 'encontrado' : 'n√£o encontrado');
      return user;
    } catch (error) {
      console.error('‚ùå Erro em getUserByEmail:', error);
      throw new Error('Falha ao buscar usu√°rio');
    }
  },

  // Atualizar dados do usu√°rio
  async updateUserData(userId, userData) {
    try {
      const user = await prisma.user.update({
        where: { id: userId },
        data: {
          name: userData.name,
          email: userData.email,
          avatar: userData.avatar,
          role: userData.role
        }
      });
      
      return user;
    } catch (error) {
      console.error('Erro ao atualizar dados do usu√°rio:', error);
      throw new Error('Falha ao atualizar dados do usu√°rio');
    }
  },

  // Criar novo usu√°rio
  async createUser(userData) {
    try {
      const user = await prisma.user.create({
        data: {
          name: userData.name,
          email: userData.email,
          avatar: userData.avatar,
          role: userData.role || 'user'
        }
      });
      
      return user;
    } catch (error) {
      console.error('Erro ao criar usu√°rio:', error);
      throw new Error('Falha ao criar usu√°rio');
    }
  },

  // Listar todos os usu√°rios
  async getAllUsers() {
    try {
      const users = await prisma.user.findMany({
        select: {
          id: true,
          name: true,
          email: true,
          role: true,
          createdAt: true
        },
        orderBy: { createdAt: 'desc' }
      });
      
      return users;
    } catch (error) {
      console.error('Erro ao listar usu√°rios:', error);
      throw new Error('Falha ao listar usu√°rios');
    }
  }
}; 